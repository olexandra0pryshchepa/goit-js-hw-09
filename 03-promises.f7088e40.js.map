{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAqBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA9BPL,EAAKY,iBAAiB,UAAU,SAAUC,GACxCA,EAAEC,iBAMF,IAJA,IAAMC,EAAaC,SAAShB,EAAKiB,SAASZ,MAAMa,OAC5CC,EAAYH,SAAShB,EAAKiB,SAASG,KAAKF,OACtCG,EAAcL,SAAShB,EAAKiB,SAASK,OAAOJ,OAEzCK,EAAI,EAAGA,EAAIF,EAAaE,IAAK,CAGhCpB,EAFaoB,EAAI,EACPR,EAAaI,EAAYI,GAEpCC,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEvEyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGzEL,EAAKgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n\n  const delayValue = parseInt(form.elements.delay.value);\nconst stepValue = parseInt(form.elements.step.value);\n  const amountValue = parseInt(form.elements.amount.value);\n  \n  for (let i = 0; i < amountValue; i++) {\n    const position = i + 1;\n    const delay = delayValue + stepValue * i;\n        createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  form.reset();\n});\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delayValue","parseInt","elements","value","stepValue","step","amountValue","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.f7088e40.js.map"}